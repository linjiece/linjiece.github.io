<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Linjiece</title>
  
  <subtitle>none</subtitle>
  <link href="https://linjiece.github.io/atom.xml" rel="self"/>
  
  <link href="https://linjiece.github.io/"/>
  <updated>2020-10-12T15:09:57.714Z</updated>
  <id>https://linjiece.github.io/</id>
  
  <author>
    <name>linjiece</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RestTemplate 使用</title>
    <link href="https://linjiece.github.io/2020/09/09/RestTemplate-%E5%B0%8F%E7%BB%93/"/>
    <id>https://linjiece.github.io/2020/09/09/RestTemplate-%E5%B0%8F%E7%BB%93/</id>
    <published>2020-09-08T16:08:40.000Z</published>
    <updated>2020-10-12T15:09:57.714Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestTemplateConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">(ClientHttpRequestFactory factory)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate(factory);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ClientHttpRequestFactory <span class="title">simpleClientHttpRequestFactory</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SimpleClientHttpRequestFactory factory = <span class="keyword">new</span> SimpleClientHttpRequestFactory();</span><br><span class="line">        factory.setConnectTimeout(<span class="number">15000</span>);</span><br><span class="line">        factory.setReadTimeout(<span class="number">5000</span>);</span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用restTemplate"><a href="#使用restTemplate" class="headerlink" title="使用restTemplate"></a>使用restTemplate</h2><h3 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h3><div class="tabs" id="getforentity"><ul class="nav-tabs"><li class="tab active"><a href="#getforentity-1">请求头1</a></li><li class="tab"><a href="#getforentity-2">请求头2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="getforentity-1"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// </span></span><br><span class="line">Map&lt;String,String&gt; parms = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">parms.put(<span class="string">&quot;data1&quot;</span>, A);</span><br><span class="line">parms.put(<span class="string">&quot;data2&quot;</span>,B);</span><br><span class="line">parms.put(<span class="string">&quot;data3&quot;</span>,C);</span><br><span class="line"></span><br><span class="line">ResponseEntity&lt;String&gt; forEntity =<span class="keyword">null</span>;</span><br><span class="line">HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">headers.add(HttpHeaders.ACCEPT, MediaType.APPLICATION_JSON_VALUE);</span><br><span class="line">headers.setContentType(MediaType.APPLICATION_JSON);</span><br><span class="line"></span><br><span class="line">HttpEntity&lt;String&gt; httpEntity = <span class="keyword">new</span> HttpEntity&lt;&gt;(headers);</span><br><span class="line">String res = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    forEntity =restTemplate.exchange(url+<span class="string">&quot;/oauth2/access_token?data1=&#123;data1&#125;&amp;data2=&#123;data2&#125;&amp;data3=&#123;data3&#125;&quot;</span>,</span><br><span class="line">HttpMethod.GET,httpEntity,String.class,parms);</span><br><span class="line">    <span class="comment">/*or</span></span><br><span class="line"><span class="comment">     forEntity =restTemplate.exchange(url+&quot;/oauth2/access_token?data1=&#123;1&#125;&amp;data2=&#123;2&#125;&amp;data3=&#123;3&#125;&quot;,</span></span><br><span class="line"><span class="comment">    HttpMethod.GET,httpEntity,String.class,data1,data2,data3);</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;<span class="keyword">catch</span> (HttpClientErrorException e)&#123;</span><br><span class="line">   log.error(e.getResponseBodyAsString());</span><br><span class="line">&#125;</span><br><span class="line">res = forEntity.getBody();</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="getforentity-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line">InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">OutputStream outputStream = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">ResponseEntity&lt;<span class="keyword">byte</span>[]&gt; responseEntity = <span class="keyword">null</span>;</span><br><span class="line">HttpHeaders headers =<span class="keyword">new</span> HttpHeaders();</span><br><span class="line">List list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list.add(MediaType.APPLICATION_OCTET_STREAM);</span><br><span class="line">headers.setAccept(list);</span><br><span class="line"></span><br><span class="line">HttpEntity httpEntity = <span class="keyword">new</span> HttpEntity(<span class="keyword">null</span>, headers);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    responseEntity = restTemplate.exchange(url, HttpMethod.GET,</span><br><span class="line">    httpEntity, <span class="keyword">byte</span>[].class);</span><br><span class="line">    <span class="keyword">byte</span>[] result = responseEntity.getBody();</span><br><span class="line">    inputStream = <span class="keyword">new</span> ByteArrayInputStream(result);</span><br><span class="line">    File file = <span class="keyword">new</span> File(path);</span><br><span class="line">    outputStream = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">int</span> len =<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((len = inputStream.read(buf,<span class="number">0</span>,<span class="number">1024</span>))!=-<span class="number">1</span>)&#123;</span><br><span class="line">        outputStream.write(buf,<span class="number">0</span>,len);</span><br><span class="line">    &#125;</span><br><span class="line">    outputStream.flush();</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">    log.error(e.getMessage());</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">    <span class="comment">//xxxxxxxxxx</span></span><br><span class="line">    inputStream.close();</span><br><span class="line">    outputStream.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div></div><h3 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h3><div class="tabs" id="postforentity"><ul class="nav-tabs"><li class="tab active"><a href="#postforentity-1">formData</a></li><li class="tab"><a href="#postforentity-2">json</a></li></ul><div class="tab-content"><div class="tab-pane active" id="postforentity-1"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line">MultiValueMap&lt;String, String&gt; map = <span class="keyword">new</span> LinkedMultiValueMap&lt;&gt;();</span><br><span class="line">map.add(<span class="string">&quot;data1&quot;</span>, A);</span><br><span class="line">map.add(<span class="string">&quot;data2&quot;</span>, B);</span><br><span class="line">map.add(<span class="string">&quot;data3&quot;</span>, C);</span><br><span class="line"></span><br><span class="line">ResponseEntity&lt;String&gt; forEntity =<span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);</span><br><span class="line">HttpEntity&lt;MultiValueMap&lt;String, String&gt;&gt; httpEntity = </span><br><span class="line"><span class="keyword">new</span> HttpEntity&lt;&gt;(map, headers);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    forEntity = restTemplate.postForEntity(url,httpEntity,String.class);</span><br><span class="line">&#125;<span class="keyword">catch</span> (HttpClientErrorException e)&#123;</span><br><span class="line">    log.error(e.getResponseBodyAsString());</span><br><span class="line">&#125;</span><br><span class="line">String res = forEntity.getBody();</span><br><span class="line">    </span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="postforentity-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//get a dataObject</span></span><br><span class="line">HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">headers.setContentType(MediaType.APPLICATION_JSON);</span><br><span class="line">HttpEntity&lt;Object&gt; httpEntity = <span class="keyword">new</span> HttpEntity&lt;&gt;(object, headers);</span><br><span class="line"></span><br><span class="line">ResponseEntity&lt;String&gt; forEntity = restTemplate.postForEntity(url,httpEntity,String.class);</span><br><span class="line">String res = forEntity.getBody();</span><br><span class="line"></span><br><span class="line">     </span><br></pre></td></tr></table></figure></div></div></div><hr><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Configuration&quot;&gt;&lt;a href=&quot;#Configuration&quot; class=&quot;headerlink&quot; title=&quot;Configuration&quot;&gt;&lt;/a&gt;Configuration&lt;/h2&gt;&lt;figure class=&quot;highlight java</summary>
      
    
    
    
    
    <category term="Spring" scheme="https://linjiece.github.io/tags/Spring/"/>
    
    <category term="RestTemplate" scheme="https://linjiece.github.io/tags/RestTemplate/"/>
    
  </entry>
  
  <entry>
    <title>dom4j解析xml</title>
    <link href="https://linjiece.github.io/2020/09/08/dom4j%E8%A7%A3%E6%9E%90xml/"/>
    <id>https://linjiece.github.io/2020/09/08/dom4j%E8%A7%A3%E6%9E%90xml/</id>
    <published>2020-09-08T12:05:14.000Z</published>
    <updated>2020-10-12T15:06:30.569Z</updated>
    
    <content type="html"><![CDATA[<h2 id="dom4j生成xml"><a href="#dom4j生成xml" class="headerlink" title="dom4j生成xml"></a>dom4j生成xml</h2><blockquote><p>创建Document实例</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Document doc = DocumentHelper.creatDocument();</span><br></pre></td></tr></table></figure><blockquote><p>添加根节点及子节点</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Element root = doc.addElement(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">Element child = root.addElement(<span class="string">&quot;data&quot;</span>)</span><br><span class="line">                    .addAttribute(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;01&quot;</span>)</span><br><span class="line">                    .addText(<span class="string">&quot;dataText&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>生成xml</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">OutputFormat format = OutputFormat.createPrettyPrint();</span><br><span class="line">XMLWriter writer = <span class="keyword">new</span> XMLWriter(<span class="keyword">new</span> FileOutputStream(file), format);</span><br><span class="line">writer.write(doc);</span><br></pre></td></tr></table></figure><hr><h2 id="解析xml"><a href="#解析xml" class="headerlink" title="解析xml"></a>解析xml</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个SAXReader解析器</span></span><br><span class="line">SAXReader reader = <span class="keyword">new</span> SAXReader();</span><br><span class="line"><span class="comment">// 读取xml文件,转换成Document结点</span></span><br><span class="line">Document doc = reader.read(file);</span><br><span class="line">Element root = doc.getRootElement();</span><br><span class="line">List&lt;Element&gt; childElements = root.elements();</span><br><span class="line"><span class="keyword">for</span> (Element child : childElements) &#123;</span><br><span class="line"><span class="comment">//xxxxxxxx</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//output</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;dom4j生成xml&quot;&gt;&lt;a href=&quot;#dom4j生成xml&quot; class=&quot;headerlink&quot; title=&quot;dom4j生成xml&quot;&gt;&lt;/a&gt;dom4j生成xml&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;创建Document实例&lt;/p&gt;
&lt;/blockq</summary>
      
    
    
    
    <category term="java" scheme="https://linjiece.github.io/categories/java/"/>
    
    
    <category term="java" scheme="https://linjiece.github.io/tags/java/"/>
    
    <category term="dom4j" scheme="https://linjiece.github.io/tags/dom4j/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-NexT</title>
    <link href="https://linjiece.github.io/2020/08/28/learning/"/>
    <id>https://linjiece.github.io/2020/08/28/learning/</id>
    <published>2020-08-27T16:00:06.000Z</published>
    <updated>2020-09-08T10:16:02.128Z</updated>
    
    <content type="html"><![CDATA[<p>参见<a href="http://theme-next.iissnan.com/getting-started.html">NexT</a></p><div class="note ">            <p><b>Header</b><br>(without define class style)</p>          </div><div class="note info no-icon">            <p><b>注意</b><br>站点配置文件下language值填写，应与主题下languaes/$(language).yml的$(language)要保持一致，否则无法映射对应的语言</p>          </div><blockquote class="blockquote-center">            <i class="fa fa-quote-left"></i>                        <i class="fa fa-quote-right"></i>          </blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参见&lt;a href=&quot;http://theme-next.iissnan.com/getting-started.html&quot;&gt;NexT&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;note &quot;&gt;
            &lt;p&gt;&lt;b&gt;Header&lt;/b&gt;&lt;br&gt;(without </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://linjiece.github.io/2020/08/27/hello-world/"/>
    <id>https://linjiece.github.io/2020/08/27/hello-world/</id>
    <published>2020-08-27T14:36:55.788Z</published>
    <updated>2020-08-27T14:36:55.788Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
