<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>RestTemplate 使用</title>
    <url>/2020/09/09/RestTemplate-%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestTemplateConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">(ClientHttpRequestFactory factory)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate(factory);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ClientHttpRequestFactory <span class="title">simpleClientHttpRequestFactory</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SimpleClientHttpRequestFactory factory = <span class="keyword">new</span> SimpleClientHttpRequestFactory();</span><br><span class="line">        factory.setConnectTimeout(<span class="number">15000</span>);</span><br><span class="line">        factory.setReadTimeout(<span class="number">5000</span>);</span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="使用restTemplate"><a href="#使用restTemplate" class="headerlink" title="使用restTemplate"></a>使用restTemplate</h2><h3 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h3><div class="tabs" id="getforentity"><ul class="nav-tabs"><li class="tab active"><a href="#getforentity-1">请求头1</a></li><li class="tab"><a href="#getforentity-2">请求头2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="getforentity-1"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// </span></span><br><span class="line">Map&lt;String,String&gt; parms = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">parms.put(<span class="string">&quot;data1&quot;</span>, A);</span><br><span class="line">parms.put(<span class="string">&quot;data2&quot;</span>,B);</span><br><span class="line">parms.put(<span class="string">&quot;data3&quot;</span>,C);</span><br><span class="line"></span><br><span class="line">ResponseEntity&lt;String&gt; forEntity =<span class="keyword">null</span>;</span><br><span class="line">HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">headers.add(HttpHeaders.ACCEPT, MediaType.APPLICATION_JSON_VALUE);</span><br><span class="line">headers.setContentType(MediaType.APPLICATION_JSON);</span><br><span class="line"></span><br><span class="line">HttpEntity&lt;String&gt; httpEntity = <span class="keyword">new</span> HttpEntity&lt;&gt;(headers);</span><br><span class="line">String res = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    forEntity =restTemplate.exchange(url+<span class="string">&quot;/oauth2/access_token?data1=&#123;data1&#125;&amp;data2=&#123;data2&#125;&amp;data3=&#123;data3&#125;&quot;</span>,</span><br><span class="line">	HttpMethod.GET,httpEntity,String.class,parms);</span><br><span class="line">    <span class="comment">/*or</span></span><br><span class="line"><span class="comment">     forEntity =restTemplate.exchange(url+&quot;/oauth2/access_token?data1=&#123;1&#125;&amp;data2=&#123;2&#125;&amp;data3=&#123;3&#125;&quot;,</span></span><br><span class="line"><span class="comment">    HttpMethod.GET,httpEntity,String.class,data1,data2,data3);</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;<span class="keyword">catch</span> (HttpClientErrorException e)&#123;</span><br><span class="line">   log.error(e.getResponseBodyAsString());</span><br><span class="line">&#125;</span><br><span class="line">res = forEntity.getBody();</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="getforentity-2"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line">InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">OutputStream outputStream = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">ResponseEntity&lt;<span class="keyword">byte</span>[]&gt; responseEntity = <span class="keyword">null</span>;</span><br><span class="line">HttpHeaders headers =<span class="keyword">new</span> HttpHeaders();</span><br><span class="line">List list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list.add(MediaType.APPLICATION_OCTET_STREAM);</span><br><span class="line">headers.setAccept(list);</span><br><span class="line"></span><br><span class="line">HttpEntity httpEntity = <span class="keyword">new</span> HttpEntity(<span class="keyword">null</span>, headers);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    responseEntity = restTemplate.exchange(url, HttpMethod.GET,</span><br><span class="line">    httpEntity, <span class="keyword">byte</span>[].class);</span><br><span class="line">    <span class="keyword">byte</span>[] result = responseEntity.getBody();</span><br><span class="line">    inputStream = <span class="keyword">new</span> ByteArrayInputStream(result);</span><br><span class="line">    File file = <span class="keyword">new</span> File(path);</span><br><span class="line">    outputStream = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="keyword">int</span> len =<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((len = inputStream.read(buf,<span class="number">0</span>,<span class="number">1024</span>))!=-<span class="number">1</span>)&#123;</span><br><span class="line">        outputStream.write(buf,<span class="number">0</span>,len);</span><br><span class="line">    &#125;</span><br><span class="line">    outputStream.flush();</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">    log.error(e.getMessage());</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">    <span class="comment">//xxxxxxxxxx</span></span><br><span class="line">    inputStream.close();</span><br><span class="line">    outputStream.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div></div></div>
<h3 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h3><div class="tabs" id="postforentity"><ul class="nav-tabs"><li class="tab active"><a href="#postforentity-1">formData</a></li><li class="tab"><a href="#postforentity-2">json</a></li></ul><div class="tab-content"><div class="tab-pane active" id="postforentity-1"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line">MultiValueMap&lt;String, String&gt; map = <span class="keyword">new</span> LinkedMultiValueMap&lt;&gt;();</span><br><span class="line">map.add(<span class="string">&quot;data1&quot;</span>, A);</span><br><span class="line">map.add(<span class="string">&quot;data2&quot;</span>, B);</span><br><span class="line">map.add(<span class="string">&quot;data3&quot;</span>, C);</span><br><span class="line"></span><br><span class="line">ResponseEntity&lt;String&gt; forEntity =<span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);</span><br><span class="line">HttpEntity&lt;MultiValueMap&lt;String, String&gt;&gt; httpEntity = </span><br><span class="line"><span class="keyword">new</span> HttpEntity&lt;&gt;(map, headers);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    forEntity = restTemplate.postForEntity(url,httpEntity,String.class);</span><br><span class="line">&#125;<span class="keyword">catch</span> (HttpClientErrorException e)&#123;</span><br><span class="line">    log.error(e.getResponseBodyAsString());</span><br><span class="line">&#125;</span><br><span class="line">String res = forEntity.getBody();</span><br><span class="line">    </span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="postforentity-2"><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//get a dataObject</span></span><br><span class="line">HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">headers.setContentType(MediaType.APPLICATION_JSON);</span><br><span class="line">HttpEntity&lt;Object&gt; httpEntity = <span class="keyword">new</span> HttpEntity&lt;&gt;(object, headers);</span><br><span class="line"></span><br><span class="line">ResponseEntity&lt;String&gt; forEntity = restTemplate.postForEntity(url,httpEntity,String.class);</span><br><span class="line">String res = forEntity.getBody();</span><br><span class="line"></span><br><span class="line">     </span><br></pre></td></tr></table></figure></div></div></div>

<hr>
<hr>
]]></content>
      <tags>
        <tag>Spring</tag>
        <tag>RestTemplate</tag>
      </tags>
  </entry>
  <entry>
    <title>dom4j解析xml</title>
    <url>/2020/09/08/dom4j%E8%A7%A3%E6%9E%90xml/</url>
    <content><![CDATA[<h2 id="dom4j生成xml"><a href="#dom4j生成xml" class="headerlink" title="dom4j生成xml"></a>dom4j生成xml</h2><blockquote>
<p>创建Document实例</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Document doc = DocumentHelper.creatDocument();</span><br></pre></td></tr></table></figure>

<blockquote>
<p>添加根节点及子节点</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Element root = doc.addElement(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">Element child = root.addElement(<span class="string">&quot;data&quot;</span>)</span><br><span class="line">                    .addAttribute(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;01&quot;</span>)</span><br><span class="line">                    .addText(<span class="string">&quot;dataText&quot;</span>);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>生成xml</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">OutputFormat format = OutputFormat.createPrettyPrint();</span><br><span class="line">XMLWriter writer = <span class="keyword">new</span> XMLWriter(<span class="keyword">new</span> FileOutputStream(file), format);</span><br><span class="line">writer.write(doc);</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="解析xml"><a href="#解析xml" class="headerlink" title="解析xml"></a>解析xml</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建一个SAXReader解析器</span></span><br><span class="line">SAXReader reader = <span class="keyword">new</span> SAXReader();</span><br><span class="line"><span class="comment">// 读取xml文件,转换成Document结点</span></span><br><span class="line">Document doc = reader.read(file);</span><br><span class="line">Element root = doc.getRootElement();</span><br><span class="line">List&lt;Element&gt; childElements = root.elements();</span><br><span class="line"><span class="keyword">for</span> (Element child : childElements) &#123;</span><br><span class="line"><span class="comment">//xxxxxxxx</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//output</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>dom4j</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-NexT</title>
    <url>/2020/08/28/learning/</url>
    <content><![CDATA[<p>参见<a href="http://theme-next.iissnan.com/getting-started.html">NexT</a></p>
<div class="note ">
            <p><b>Header</b><br>(without define class style)</p>
          </div>

<div class="note info no-icon">
            <p><b>注意</b><br>站点配置文件下language值填写，应与主题下languaes/$(language).yml的$(language)要保持一致，否则无法映射对应的语言</p>
          </div>

<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            
            <i class="fa fa-quote-right"></i>
          </blockquote>


]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/08/27/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>leetcode-1024-视频拼接</title>
    <url>/2020/10/24/leetcode-1024-%E8%A7%86%E9%A2%91%E6%8B%BC%E6%8E%A5/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><div class="note info no-icon">
            <p>你将会获得一系列视频片段，这些片段来自于一项持续时长为 T 秒的体育赛事。这些片段可能有所重叠，也可能长度不一。<br>视频片段 <code>clips[i]</code> 都用区间进行表示：开始于 <code>clips[i][0] </code>并于 <code>clips[i][1]</code> 结束。我们甚至可以对这些片段自由地再剪辑，例如片段 <em>[0, 7]</em> 可以剪切成 <em>[0, 1]</em>+ <em>[1, 3]</em> +<em>[3, 7]<em>三部分。<br>我们需要将这些片段进行再剪辑，并将剪辑后的内容拼接成覆盖整个运动过程的片段</em>[0, T]*。返回所需片段的最小数目，如果无法完成该任务，则返回 *-1</em> 。 </p><ul><li><strong>示例</strong>：</li><li><strong>输入</strong>：clips = [[0,2],[4,6],[8,10],[1,9],[1,5],[5,9]], T = 10</li><li><strong>输入</strong>：3</li><li><strong>解释</strong>：<br>我们选中 [0,2], [8,10], [1,9] 这三个片段。然后，按下面的方案重制比赛片段：将 [1,9] 再剪辑为 [1,2] + [2,8] + [8,9] 。现在我们手上有 [0,2] + [2,8] + [8,10]，而这些涵盖了整场比赛 [0, 10]。</li><li><strong>提示</strong>：<br>1 &lt;= clips.length &lt;= 100<br>0 &lt;= clips[i][0] &lt;= clips[i][1] &lt;= 100<br>0 &lt;= T &lt;= 100 </li></ul>
          </div>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><div class="note success no-icon">
            <p>看题目描述的视频片段长度区间表示为[a,b)，对于每一个位置 <em>i</em>，记录以其为左端点的子区间中最远的右端点;每枚举到一个位置，更新当前位置在这些片段中所覆盖的最远位置。若当前位置<em>i</em>即为最远位置，表示区间已断层[0,i)==&gt;[i+n,…),返回-1;若当前位置已抵达上个最远位置端点，所需片段+1,更新上个最远端点值。</p>
          </div>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">videoStitching</span><span class="params">(<span class="keyword">int</span>[][] clips, <span class="keyword">int</span> T)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(T==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> []maxEnd =<span class="keyword">new</span> <span class="keyword">int</span>[T];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> []clip:clips)&#123;</span><br><span class="line">            <span class="keyword">if</span>(clip[<span class="number">0</span>]&lt;T)</span><br><span class="line">            maxEnd[clip[<span class="number">0</span>]]=Math.max(clip[<span class="number">1</span>],maxEnd[clip[<span class="number">0</span>]]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> preLast=<span class="number">0</span>,last=<span class="number">0</span>,count=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;T;i++)&#123;</span><br><span class="line">            last =Math.max(last,maxEnd[i]);</span><br><span class="line">            <span class="keyword">if</span>(i==last)<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i==preLast)&#123;</span><br><span class="line">                count++;</span><br><span class="line">                preLast=last;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>时间复杂度：<em>O(T + N)</em></li>
<li>空间复杂度：<em>O(T)</em></li>
</ul>
]]></content>
      <categories>
        <category>-leetcode</category>
      </categories>
      <tags>
        <tag>贪心算法</tag>
        <tag>动态规划</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode-[530]二叉搜索树的最小绝对差</title>
    <url>/2020/10/12/leetcode-530-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BB%9D%E5%AF%B9%E5%B7%AE/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><div class="note info no-icon">
            <p><b>给你一棵所有节点为非负值的二叉搜索树，请你计算树中任意两节点的差的绝对值的最小值。</b></p><ul><li><strong>示例</strong>：</li><li><strong>输入</strong>：<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"> \</span><br><span class="line">  <span class="number">3</span></span><br><span class="line"> /</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure></li><li><strong>输出</strong>：<figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span></span><br></pre></td></tr></table></figure></li><li><strong>解释</strong>：<br><code>最小绝对差为 1，其中 2 和 1 的差的绝对值为 1（或者 2 和 3）。</code></li><li><strong>提示</strong>：<br><code>树中至少有 2 个节点。</code></li></ul>
          </div>

<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><div class="note success no-icon">
            <p>二叉搜索树的中序遍历结果为升序,遍历前后两节点值的差的绝对值即为最小绝对值差</p>
          </div>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> min=Integer.MAX_VALUE;</span><br><span class="line">    TreeNode pre =<span class="keyword">null</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMinimumDifference</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        dfs(root);</span><br><span class="line">        <span class="keyword">return</span> min;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span>  <span class="title">dfs</span><span class="params">(TreeNode root)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="keyword">null</span>)<span class="keyword">return</span>;</span><br><span class="line">        dfs(root.left);</span><br><span class="line">        <span class="keyword">if</span>(pre!=<span class="keyword">null</span>)</span><br><span class="line">            min =Math.min(min,root.val-pre.val);</span><br><span class="line">        pre = root;</span><br><span class="line">        dfs(root.right);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>leetcode</tag>
      </tags>
  </entry>
</search>
